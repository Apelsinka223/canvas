defmodule Canvas.DrawingTest do
  use Canvas.DataCase
  alias Canvas.{Drawing, Fields}
  alias Canvas.Drawing.{Rectangle, FloodFill}
  alias Canvas.Fields.Field

  describe "fixtures" do
    #
    #
    #   @@@@@
    #   @XXX@  XXXXXXXXXXXXXX
    #   @@@@@  XOOOOOOOOOOOOX
    #          XOOOOOOOOOOOOX
    #          XOOOOOOOOOOOOX
    #          XOOOOOOOOOOOOX
    #          XXXXXXXXXXXXXX
    test "fixture 1" do
      field = %Field{body: %{}, size_fixed: false}

      {:ok, {field, _}} =
        Drawing.apply(
          %Rectangle{
            start_point: %{x: 3, y: 2},
            width: 5,
            height: 3,
            outline_char: "@",
            fill_char: "X"
          },
          field
        )

      {:ok, {field, _}} =
        Drawing.apply(
          %Rectangle{
            start_point: %{x: 10, y: 3},
            width: 14,
            height: 6,
            outline_char: "X",
            fill_char: "O"
          },
          field
        )

      assert Fields.print(field) == File.read!(Path.join(File.cwd!(), "test/canvas/fixtures/1.md"))
    end

    #              .......
    #              .......
    #              .......
    #OOOOOOOO      .......
    #O      O      .......
    #O    XXXXX    .......
    #OOOOOXXXXX
    #     XXXXX
    test "fixture 2" do
      field = %Field{body: %{}, size_fixed: false}

      {:ok, {field, _}} =
        Drawing.apply(
          %Rectangle{
            start_point: %{x: 14, y: 0},
            width: 7,
            height: 6,
            outline_char: nil,
            fill_char: "."
          },
          field
        )

      {:ok, {field, _}} =
        Drawing.apply(
          %Rectangle{
            start_point: %{x: 0, y: 3},
            width: 8,
            height: 4,
            outline_char: "O",
            fill_char: nil
          },
          field
        )

      {:ok, {field, _}} =
        Drawing.apply(
          %Rectangle{
            start_point: %{x: 5, y: 5},
            width: 5,
            height: 3,
            outline_char: "X",
            fill_char: "X"
          },
          field
        )

      assert field ==
        %Field{
          width: 21,
          height: 8,
          size_fixed: false,
          body: %{
            {3, 3} => "O",
            {4, 3} => "O",
            {5, 3} => "O",
            {6, 3} => "O",
            {7, 3} => "O",
            {7, 4} => "O",
            {14, 3} => ".",
            {14, 4} => ".",
            {14, 5} => ".",
            {15, 3} => ".",
            {15, 4} => ".",
            {15, 5} => ".",
            {16, 3} => ".",
            {16, 4} => ".",
            {16, 5} => ".",
            {17, 3} => ".",
            {17, 4} => ".",
            {17, 5} => ".",
            {18, 3} => ".",
            {18, 4} => ".",
            {18, 5} => ".",
            {19, 3} => ".",
            {19, 4} => ".",
            {19, 5} => ".",
            {20, 3} => ".",
            {20, 4} => ".",
            {20, 5} => ".",
            {0, 3} => "O",
            {0, 4} => "O",
            {0, 5} => "O",
            {0, 6} => "O",
            {1, 3} => "O",
            {1, 6} => "O",
            {2, 3} => "O",
            {2, 6} => "O",
            {3, 6} => "O",
            {4, 6} => "O",
            {5, 5} => "X",
            {5, 6} => "X",
            {5, 7} => "X",
            {6, 5} => "X",
            {6, 6} => "X",
            {6, 7} => "X",
            {7, 5} => "X",
            {7, 6} => "X",
            {7, 7} => "X",
            {8, 5} => "X",
            {8, 6} => "X",
            {8, 7} => "X",
            {9, 5} => "X",
            {9, 6} => "X",
            {9, 7} => "X",
            {14, 0} => ".",
            {14, 1} => ".",
            {14, 2} => ".",
            {15, 0} => ".",
            {15, 1} => ".",
            {15, 2} => ".",
            {16, 0} => ".",
            {16, 1} => ".",
            {16, 2} => ".",
            {17, 0} => ".",
            {17, 1} => ".",
            {17, 2} => ".",
            {18, 0} => ".",
            {18, 1} => ".",
            {18, 2} => ".",
            {19, 0} => ".",
            {19, 1} => ".",
            {19, 2} => ".",
            {20, 0} => ".",
            {20, 1} => ".",
            {20, 2} => "."
          }
        }
    end

    #--------------.......
    #--------------.......
    #--------------.......
    #OOOOOOOO------.......
    #O      O------.......
    #O    XXXXX----.......
    #OOOOOXXXXX-----------
    #     XXXXX-----------
    test "fixture 3" do
      field = %Field{body: %{}, size_fixed: false}

      {:ok, {field, _}} =
        Drawing.apply(
          %Rectangle{
            start_point: %{x: 14, y: 0},
            width: 7,
            height: 6,
            outline_char: nil,
            fill_char: "."
          },
          field
        )

      {:ok, {field, _}} =
        Drawing.apply(
          %Rectangle{
            start_point: %{x: 0, y: 3},
            width: 8,
            height: 4,
            outline_char: "O",
            fill_char: nil
          },
          field
        )

      {:ok, {field, _}} =
        Drawing.apply(
          %Rectangle{
            start_point: %{x: 5, y: 5},
            width: 5,
            height: 3,
            outline_char: "X",
            fill_char: "X"
          },
          field
        )

      {:ok, {field, _}} =
        Drawing.apply(
          %FloodFill{
            start_point: %{x: 0, y: 0},
            fill_char: "-"
          },
          field
        )

      assert field ==
        %Field{
          width: 21,
          height: 8,
          size_fixed: false,
          body: %{
            {0, 3} => "O",
            {0, 4} => "O",
            {0, 5} => "O",
            {0, 6} => "O",
            {1, 3} => "O",
            {1, 6} => "O",
            {2, 3} => "O",
            {2, 6} => "O",
            {3, 3} => "O",
            {3, 6} => "O",
            {4, 3} => "O",
            {4, 6} => "O",
            {5, 3} => "O",
            {5, 5} => "X",
            {5, 6} => "X",
            {5, 7} => "X",
            {6, 3} => "O",
            {6, 5} => "X",
            {6, 6} => "X",
            {6, 7} => "X",
            {7, 3} => "O",
            {7, 4} => "O",
            {7, 5} => "X",
            {7, 6} => "X",
            {7, 7} => "X",
            {8, 5} => "X",
            {8, 6} => "X",
            {8, 7} => "X",
            {9, 5} => "X",
            {9, 6} => "X",
            {9, 7} => "X",
            {14, 0} => ".",
            {14, 1} => ".",
            {14, 2} => ".",
            {14, 3} => ".",
            {14, 4} => ".",
            {14, 5} => ".",
            {15, 0} => ".",
            {15, 1} => ".",
            {15, 2} => ".",
            {15, 3} => ".",
            {15, 4} => ".",
            {15, 5} => ".",
            {16, 0} => ".",
            {16, 1} => ".",
            {16, 2} => ".",
            {16, 3} => ".",
            {16, 4} => ".",
            {16, 5} => ".",
            {17, 0} => ".",
            {17, 1} => ".",
            {17, 2} => ".",
            {17, 3} => ".",
            {17, 4} => ".",
            {17, 5} => ".",
            {18, 0} => ".",
            {18, 1} => ".",
            {18, 2} => ".",
            {18, 3} => ".",
            {18, 4} => ".",
            {18, 5} => ".",
            {19, 0} => ".",
            {19, 1} => ".",
            {19, 2} => ".",
            {19, 3} => ".",
            {19, 4} => ".",
            {19, 5} => ".",
            {20, 0} => ".",
            {20, 1} => ".",
            {20, 2} => ".",
            {20, 3} => ".",
            {20, 4} => ".",
            {20, 5} => ".",
            {0, 0} => "-",
            {0, 1} => "-",
            {0, 2} => "-",
            {1, 0} => "-",
            {1, 1} => "-",
            {1, 2} => "-",
            {2, 0} => "-",
            {2, 1} => "-",
            {2, 2} => "-",
            {3, 0} => "-",
            {3, 1} => "-",
            {3, 2} => "-",
            {4, 0} => "-",
            {4, 1} => "-",
            {4, 2} => "-",
            {5, 0} => "-",
            {5, 1} => "-",
            {5, 2} => "-",
            {6, 0} => "-",
            {6, 1} => "-",
            {6, 2} => "-",
            {7, 0} => "-",
            {7, 1} => "-",
            {7, 2} => "-",
            {8, 0} => "-",
            {8, 1} => "-",
            {8, 2} => "-",
            {8, 3} => "-",
            {8, 4} => "-",
            {9, 0} => "-",
            {9, 1} => "-",
            {9, 2} => "-",
            {9, 3} => "-",
            {9, 4} => "-",
            {10, 0} => "-",
            {10, 1} => "-",
            {10, 2} => "-",
            {10, 3} => "-",
            {10, 4} => "-",
            {10, 5} => "-",
            {10, 6} => "-",
            {10, 7} => "-",
            {11, 0} => "-",
            {11, 1} => "-",
            {11, 2} => "-",
            {11, 3} => "-",
            {11, 4} => "-",
            {11, 5} => "-",
            {11, 6} => "-",
            {11, 7} => "-",
            {12, 0} => "-",
            {12, 1} => "-",
            {12, 2} => "-",
            {12, 3} => "-",
            {12, 4} => "-",
            {12, 5} => "-",
            {12, 6} => "-",
            {12, 7} => "-",
            {13, 0} => "-",
            {13, 1} => "-",
            {13, 2} => "-",
            {13, 3} => "-",
            {13, 4} => "-",
            {13, 5} => "-",
            {13, 6} => "-",
            {13, 7} => "-",
            {14, 6} => "-",
            {14, 7} => "-",
            {15, 6} => "-",
            {15, 7} => "-",
            {16, 6} => "-",
            {16, 7} => "-",
            {17, 6} => "-",
            {17, 7} => "-",
            {18, 6} => "-",
            {18, 7} => "-",
            {19, 6} => "-",
            {19, 7} => "-",
            {20, 6} => "-",
            {20, 7} => "-"
          }
        }
    end
  end
end
